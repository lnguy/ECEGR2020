std	C:\Users\Ly\AppData\Roaming\codelite\tmp\codelite_templates.hpp	/^namespace std { template<typename _Tp> class shared_ptr {$/;"	namespace	line:1
shared_ptr	C:\Users\Ly\AppData\Roaming\codelite\tmp\codelite_templates.hpp	/^namespace std { template<typename _Tp> class shared_ptr { $/;"	class	line:1	namespace:std
operator ->	C:\Users\Ly\AppData\Roaming\codelite\tmp\codelite_templates.hpp	/^    _Tp* operator->();$/;"	prototype	line:2	class:std::shared_ptr	access:private	signature:()	returns:_Tp 
reset	C:\Users\Ly\AppData\Roaming\codelite\tmp\codelite_templates.hpp	/^    void reset( Y* ptr );$/;"	prototype	line:3	class:std::shared_ptr	access:private	signature:( Y* ptr )	returns:void 
reset	C:\Users\Ly\AppData\Roaming\codelite\tmp\codelite_templates.hpp	/^    void reset( Y* ptr, Deleter d );$/;"	prototype	line:4	class:std::shared_ptr	access:private	signature:( Y* ptr, Deleter d )	returns:void 
reset	C:\Users\Ly\AppData\Roaming\codelite\tmp\codelite_templates.hpp	/^    void reset( Y* ptr, Deleter d, Alloc alloc );$/;"	prototype	line:5	class:std::shared_ptr	access:private	signature:( Y* ptr, Deleter d, Alloc alloc )	returns:void 
get	C:\Users\Ly\AppData\Roaming\codelite\tmp\codelite_templates.hpp	/^    _T* get() const;$/;"	prototype	line:6	class:std::shared_ptr	access:private	signature:() const
filePtr	C:\Users\Ly\ECEGR2020\Lab_4\main.c	/^FILE *filePtr; \/\/ File pointer to use for reading and writing to a file.$/;"	variable	line:5
student	C:\Users\Ly\ECEGR2020\Lab_4\main.c	/^typedef struct student \/\/ struct student being defined and type defined.$/;"	struct	line:7
ID	C:\Users\Ly\ECEGR2020\Lab_4\main.c	/^    int ID;$/;"	member	line:9	struct:student	access:public
firstName	C:\Users\Ly\ECEGR2020\Lab_4\main.c	/^    char firstName[30];$/;"	member	line:10	struct:student	access:public
lastName	C:\Users\Ly\ECEGR2020\Lab_4\main.c	/^    char lastName[30];$/;"	member	line:11	struct:student	access:public
GPA	C:\Users\Ly\ECEGR2020\Lab_4\main.c	/^    float GPA;$/;"	member	line:12	struct:student	access:public
next	C:\Users\Ly\ECEGR2020\Lab_4\main.c	/^	struct student* next; \/\/ struct student pointer to point at the next pointer in a list (used for linked lists).$/;"	member	line:13	struct:student	typeref:struct:student::student	access:public
Student	C:\Users\Ly\ECEGR2020\Lab_4\main.c	/^typedef struct student \/\/ struct student being defined and type defined. {     int ID;     char firstName[30];     char lastName[30];     float GPA; 	struct student* next; \/\/ struct student pointer to point at the next pointer in a list (used for linked lists). } Student; \/\/ struct student will have be called when type Student is used. $/;"	typedef	line:14	typeref:struct:student
firstStudent	C:\Users\Ly\ECEGR2020\Lab_4\main.c	/^Student* firstStudent = NULL; \/\/ Creating the first student pointer to be used in a linked list, because the list starts empty the pointer points to NULL.$/;"	variable	line:16
createStudentNode	C:\Users\Ly\ECEGR2020\Lab_4\main.c	/^Student* createStudentNode(int id_in, char first_in[30], char last_in[30], float gpa_in) \/\/ Creates a student node with inputs for each part of the original student struct.$/;"	function	line:33	signature:(int id_in, char first_in[30], char last_in[30], float gpa_in)	returns:Student 
addStudentNode	C:\Users\Ly\ECEGR2020\Lab_4\main.c	/^void addStudentNode(Student* newStudent) \/\/ Adds a student input to the end of the linked list.$/;"	function	line:49	signature:(Student* newStudent)	returns:void 
instertStudentNode	C:\Users\Ly\ECEGR2020\Lab_4\main.c	/^void instertStudentNode(Student* newStudent) \/\/ Inserts a student into the linked list. NOTE: This is where the list sorts by GPA as well. $/;"	function	line:67	signature:(Student* newStudent)	returns:void 
deleteStudentNode	C:\Users\Ly\ECEGR2020\Lab_4\main.c	/^void deleteStudentNode(Student* delStudent) \/\/ Deletes a student given a student input to delete.$/;"	function	line:98	signature:(Student* delStudent)	returns:void 
readStudentRecords	C:\Users\Ly\ECEGR2020\Lab_4\main.c	/^void readStudentRecords(void); \/\/ Reads the StudentRecords.txt file and writes it into a linked list.$/;"	prototype	line:129	signature:(void)	returns:void 
readList	C:\Users\Ly\ECEGR2020\Lab_4\main.c	/^void readList(void); \/\/ Iterates through the linked list and prints out all the students in the linked list.$/;"	prototype	line:133	signature:(void)	returns:void 
freeList	C:\Users\Ly\ECEGR2020\Lab_4\main.c	/^void freeList(void); \/\/ Iterates through the linked list and deletes all the students in the linked list, thus freeing the memory.$/;"	prototype	line:134	signature:(void)	returns:void 
saveList	C:\Users\Ly\ECEGR2020\Lab_4\main.c	/^void saveList(void); \/\/ Iterates through the linked list and writes all the student details in the same format into the StudentRecords.txt file.$/;"	prototype	line:135	signature:(void)	returns:void 
removeStudent	C:\Users\Ly\ECEGR2020\Lab_4\main.c	/^void removeStudent(int id_in); \/\/ Removes a student from the linked list by searching for their specific ID.$/;"	prototype	line:139	signature:(int id_in)	returns:void 
updateStudent	C:\Users\Ly\ECEGR2020\Lab_4\main.c	/^void updateStudent(int id_in); \/\/ Updates a function based on the user input for any attribute of the student based on their specific ID.$/;"	prototype	line:140	signature:(int id_in)	returns:void 
menuDisplay	C:\Users\Ly\ECEGR2020\Lab_4\main.c	/^void menuDisplay(void); \/\/ Displays the default menu.$/;"	prototype	line:144	signature:(void)	returns:void 
updateStudentMenu	C:\Users\Ly\ECEGR2020\Lab_4\main.c	/^void updateStudentMenu(char first[30], char last[30]); \/\/ Displays the menu for the specific student to have their attributes updated.$/;"	prototype	line:145	signature:(char first[30], char last[30])	returns:void 
main	C:\Users\Ly\ECEGR2020\Lab_4\main.c	/^int main()$/;"	function	line:153	signature:()	returns:int 
readStudentRecords	C:\Users\Ly\ECEGR2020\Lab_4\main.c	/^void readStudentRecords() \/\/ Reads the StudentRecords.txt file and writes it into a linked list.$/;"	function	line:244	signature:()	returns:void 
readList	C:\Users\Ly\ECEGR2020\Lab_4\main.c	/^void readList() \/\/ Iterates through the linked list and prints out all the students in the linked list.$/;"	function	line:273	signature:()	returns:void 
freeList	C:\Users\Ly\ECEGR2020\Lab_4\main.c	/^void freeList() \/\/ Iterates through the linked list and deletes all the students in the linked list, thus freeing the memory.$/;"	function	line:291	signature:()	returns:void 
saveList	C:\Users\Ly\ECEGR2020\Lab_4\main.c	/^void saveList() \/\/ Iterates through the linked list and writes all the student details in the same format into the StudentRecords.txt file.$/;"	function	line:304	signature:()	returns:void 
removeStudent	C:\Users\Ly\ECEGR2020\Lab_4\main.c	/^void removeStudent(int id_in) \/\/ Removes a student from the linked list by searching for their specific ID.$/;"	function	line:337	signature:(int id_in)	returns:void 
updateStudent	C:\Users\Ly\ECEGR2020\Lab_4\main.c	/^void updateStudent(int id_in) \/\/ Updates a function based on the user input for any attribute of the student based on their specific ID.$/;"	function	line:364	signature:(int id_in)	returns:void 
menuDisplay	C:\Users\Ly\ECEGR2020\Lab_4\main.c	/^void menuDisplay() \/\/ Displays the default menu.$/;"	function	line:464	signature:()	returns:void 
updateStudentMenu	C:\Users\Ly\ECEGR2020\Lab_4\main.c	/^void updateStudentMenu(char first[30], char last[30]) \/\/ Displays the menu for the specific student to have their attributes updated.$/;"	function	line:478	signature:(char first[30], char last[30])	returns:void 
